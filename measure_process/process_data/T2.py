import matplotlib.pyplot as plt
import numpy as np

from measure_process.Init_file import data_dump
from core_tools.data.ds.data_set import load_by_uuid
from measure_process.fits.T2_star import  Ramsey_formula, fit_Ramsey

#%% 1 dataset averaged all
qubit = 1
plot = True 
uuid = 1661981084969974076
ds = load_by_uuid(uuid)
# data_plotter(ds)
ds_avg = ds[f'read{qubit}']

params, errors = fit_Ramsey(1e-9*ds_avg.x()[:], ds_avg.y()[:], uuid, plot=plot)
print(errors['T2'])

#%%
qubit=3
uuid = 1665045815198974087
ds = load_by_uuid(uuid)
ds_avg = ds[f'read{qubit}']
x,y = ds_avg.x()[:], ds_avg.y()[:]
y=y-y.min()
y=y/y.max()
plt.plot(x,y)

#%% to select multiple datasets parts
y_multiple = []

qubit = 2
plot = True 
uuid = 1665044740538974087    
ds = load_by_uuid(uuid)
# data_plotter(ds)


for ii in range(1,2):
    y_multiple.append(ds[f'read{qubit}'][ii].y())

y_avg = sum(y_multiple)/len(y_multiple)


#it is 1-y for T1 and only y for T1_PSB
params, errors = fit_Ramsey(1e-9*ds[f'read{qubit}'][0].x()[:], y_avg[:], uuid, plot=plot)
print(errors['T2'])


#%% T2* 1Q Load data, multiple datasets
temps = [15,50,100,150,200,250,300,350,400,450,500,550,600,650,700,750,800,850]



# #Q1
# qubit = 1
# uuids = [1656924716487283874,1656930330454283874 ,1656940796220283874,1656954029735283874,1659009862711974087,1659013519505974087 ,1659017103185974087 ,1659020635399974087 ,1659024178126974087 ,1659027733328974087 ,1659031289806974087 ,
#           1659034826017974087 ,1659038378309974087 ,1659041898278974087 ,1659045424588974087 ,1659048954591974087 ,1659052486472974087 ,1659054379948974087 ]


#Q2
# qubit = 2
# uuids = [1656925426450283874,1656931059950283874 ,1656941518869283874,1656954761291283874,1659010273050974087,1659013937032974087 ,1659017521770974087 ,1659021053909974087 ,1659024600798974087 ,1659028154482974087 ,1659031712392974087 ,
#           1659035248396974087 ,1659038790518974087 ,1659042318960974087 ,1659045844835974087 ,1659049374739974087 ,1659052918907974087 ,1659054814812974087 ]

# #Q3
# qubit=3
# uuids=[1656926172789283874 ,1656935209259283874 ,1656942272044283874,1656955520914283874,1659010700366974087,1659014367226974087 ,1659017954072974087 ,1659021487849974087 ,1659025037986974087 ,1659028592117974087 ,1659032152082974087 ,
#         1659035688560974087 ,1659039220879974087 ,1659042757309974087 ,1659046282491974087 ,1659049812485974087]


# # #Q4
# qubit=4
# uuids=[1656927451728283874 ,1656933103371283874,1656943567921283874,1656956822489283874,1659011671559974087,1659015335185974087 ,1659018926510974087 ,1659022461012974087 ,1659026011865974087 ,1659029567055974087 ,1659033127018974087 ,
#         1659036662776974087 ,1659040167172974087 ,1659043717470974087 ,1659047244350974087 ,1659050773292974087 ]

# qubit = 5
# uuids = [1656928183864283874 ,1656933840218283874,1656944324921283874,1656957569007283874,1659012378651974087,1659016040875974087 ,1659019630809974087 ,1659023165957974087 ,1659026717830974087 ,1659030271769974087 ,1659033831681974087 ,
#           1659037367338974087 ,1659040872911974087 ,1659044422607974087 ,1659047948640974087 ,1659051478854974087 ,1659053352332974087 ,1659055264749974087 ]


qubit = 6
uuids = [1656928696562283874 ,1656934361762283874,1656944844769283874,1656958085310283874,1659012689688974087,1659016354725974087 ,1659019940747974087 ,1659023476409974087 ,1659027033051974087 ,1659030588241974087 ,1659034149865974087 ,
          1659037688451974087 ,1659041194525974087 ,1659044743115974087 ,1659048269702974087 ,1659051800200974087 ,1659053686232974087 ,1659055598668974087 ]



#%% T2HAHN 1Q Load data, multiple datasets
temps = [200,250,300,350,400,450,500,550,600,650,700,750,800,850]



# #Q1
# qubit = 1
# uuids = [1659112915601974087 ,1659118372932974087 ,1659123022131974087 ,1659128089736974087 ,1659133569800974087 ,1659139157556974087 ,1659143979952974087 ,
#          1659148326103974087 ,1659154112643974087 ,1659159270530974087 ,1659164785501974087 ,1659169435671974087 ,1659175006158974087 ,1659179230534974087 ]


#Q2
# qubit = 2
# uuids = [1659113473274974087 ,1659118936481974087 ,1659123581276974087 ,1659128654466974087 ,1659134423068974087 ,1659139876950974087 ,1659144542497974087 ,
#           1659149124966974087 ,1659154671119974087 ,1659160016728974087 ,1659165347555974087 ,1659169999054974087 ,1659175613062974087 ,1659180059340974087 ]

#Q3
# qubit=3
# uuids=[1659114042852974087 ,1659119590191974087 ,1659124191179974087 ,1659129447134974087 ,1659135352849974087 ,1659140446152974087 ,1659145286562974087 ,
#        1659150152472974087 ,1659155239552974087 ,1659160720437974087 ,1659165918374974087 ,1659170572481974087 ,1659176183995974087 ,1659180637368974087 ]


# # #Q4
# qubit=4
# uuids=[1659114903276974087 ,1659120456155974087 ,1659125051727974087 ,1659130347582974087 ,1659136231948974087 ,1659141298305974087 ,1659146158911974087 ,
#        1659151014264974087 ,1659156095557974087 ,1659161643641974087 ,1659166780078974087 ,1659171439635974087 ,1659177046663974087 ,1659181501538974087 ]

# qubit = 5
# uuids = [1659115659210974087 ,1659121194381974087 ,1659125788006974087 ,1659131088551974087 ,1659136975619974087 ,1659142040195974087 ,1659146898403974087 ,
#          1659151749947974087 ,1659156838716974087 ,1659162483613974087 ,1659167521781974087 ,1659172184310974087 ,1659177786118974087 ,1659182236641974087 ]


# qubit = 6
# uuids = [1659116624643974087 ,1659121715873974087 ,1659126514223974087 ,1659132261101974087 ,1659137917441974087 ,1659143097809974087 ,1659147435028974087 ,
#          1659152268437974087 ,1659157359730974087 ,1659163005408974087 ,1659168463759974087 ,1659173268730974087 ,1659178307657974087 ,1659183157684974087 ]

#%%##
dic_data = {'Temp':temps,f'Q{qubit}':np.empty(len(temps)),'low':np.empty(len(temps)),'top':np.empty(len(temps))}
for ii, uuid  in enumerate(uuids):
    ds = load_by_uuid(uuid)
    ds_avg = ds[f'read{qubit}'].average('x')
    params,errors = fit_Ramsey(1e-9*ds_avg.x()[10:], ds_avg.y()[10:], uuid, plot=False)
    dic_data[f'Q{qubit}'][ii] = abs(params['T2'].value)
    dic_data['low'][ii] = errors['T2'][0]
    dic_data['top'][ii] = errors['T2'][1]
    


plt.figure()
plt.errorbar(np.array(temps),dic_data[f'Q{qubit}'], yerr=dic_data['low'],fmt='o-',label=qubit)
plt.xlabel('T_mc [mK]')
plt.ylabel('T2* [s]')
plt.legend()
plt.show()        


#dump data
data_dump(dic_data,'T2/for Lieven',f'Q{qubit}')
